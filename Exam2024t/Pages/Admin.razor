@page "/Admin"
@using System.Diagnostics
@using Core.Models
@using Exam2024t.Services
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using System.Net.Http.Json;



<PageTitle>Admin</PageTitle>

<h2>Login as Admin</h2>

<EditForm Model="@adminLogin" OnValidSubmit="@HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="adminLogin.Username" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="adminLogin.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private Core.Models.Admin adminLogin = new Core.Models.Admin();

    /*
    private async Task HandleLogin()
        {

        var result = await AdminService.LoginAdmin(adminLogin.Username, adminLogin.Password);
        if (result)
            {
            NavigationManager.NavigateTo("/AdminDashboard");
            Console.WriteLine("login succesful!");
        }
            else
            {
            Console.WriteLine("login failed");
    }
    }
    */
    // ny kode slet herfra hvis det ikke virker 
    private EditContext aEditContext;

  

    public bool erLoggetInd = false;

    bool popUp = false;

    private string serverUrl = "https://localhost:7010";


    private bool login;

    public async Task HandleLogin()
    {

        string username = adminLogin.Username;
        string password = adminLogin.Password;

        erLoggetInd = await Http.GetFromJsonAsync<bool>($"{serverUrl}/api/admins/checklogin?username={username}&password={password}");

        Console.WriteLine("erlogget ind:" + erLoggetInd);
        Console.WriteLine(erLoggetInd);

        if (erLoggetInd == false)
        {
            Console.WriteLine("login failed");
        }
        else
        {
            NavigationManager.NavigateTo("/AdminDashboard");
            Console.WriteLine("login succesful!");
        }

    }
    /*
    private async void Save(string key, string item)
        {
        await localstore.SetItemAsStringAsync(key, item);
    }

    private async void saveloggedind()
        {
        await localstore.SetItemAsync<bool>("login", erLoggetInd);
    }

    protected async Task ClearStorage()
        {
        await localstore.ClearAsync();
        navManager.NavigateTo("login", true);
    }
    */
}

