@page "/AdminDashboard"
@using Core.Models
@using Exam2024t.Services
@using MongoDB.Bson
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager
@inject IAdminService AdminService

<PageTitle>Admin Dashboard</PageTitle>

<h2>Admin Dashboard</h2>


<h3>You are logged in as:</h3>
<div>
    <p>Username: @admin?.Username</p>
    <p>Name: @admin?.Name</p>
    <p>Email: @admin?.Email</p>
</div>
<button class="btn btn-primary" @onclick="Logout">Logout</button>

<div>

    <button class="btn btn-primary" @onclick="ShowApplicationsApproved">Applications approved</button>
    @if (showApplicationsApproved)
    {
    <h1>Godkendte</h1>
    }
</div>

<div>
<button class="btn btn-primary" @onclick="ShowQueuedApplications">Show All Applications</button>

@if (showApplications)
{
    <h1>Venteliste</h1>

<table class="table">
    <tbody>
        @foreach (var application in applications)
        {
          
               <tr>
                   <td>
                    <td>
                   <p class="infotext"><strong>Volunteer Name:</strong> @application.Child.Volunteer.Name</p>
                    </td>
                    <td>
                        <p class="infotext"><strong>Email:</strong> @application.Child.Volunteer.Email</p>
                    </td>
                    <td>
                        <p class="infotext"><strong>First Priority Week:</strong> @application.FirstpriorityWeek</p>
                    </td>
                    <td>
                        <p class="infotext"><strong>First Priority Period:</strong> @application.FirstpriorityPeriod</p>
                    </td>
                    <td>
                    <button  @onclick="() => ShowApplicationDetails(application)">Se detaljer</button>
                    </td>
                    </td>
            </tr>
            <ModalDialog @ref="DetailsDialog" Title="application details">
                @if (selectedApplication != null)
                {
                    <div>
                        <h5>Name</h5>
                        <td>
                        <p><strong>Kræwnr:</strong>  @application.Child.Volunteer.Kræwnr</p>
                        <p><strong>Volunteer Name:</strong> @application.Child.Volunteer.Name</p>
                        <p><strong>Email:</strong> @application.Child.Volunteer.Email</p>
                        </td>
                        <td>
                        <p><strong>Child Name:</strong> @application.Child.ChildName</p>
                        <p><strong>Age:</strong> @application.Child.ChildAge</p>
                        <p><strong>Comment:</strong> @application.Child.Comment</p>
                        <p><strong>Been Before:</strong> @application.Child.Beenbefore</p>
                        <p><strong>Interest:</strong> @application.Child.Interest</p>
                        <p><strong>Volunteer:</strong> @application.IsVolunteer</p>
                        <p><strong>First Priority Week:</strong> @application.FirstpriorityWeek</p>
                        <p><strong>First Priority Period:</strong> @application.FirstpriorityPeriod</p>
                        <p><strong>Second Priority Week:</strong> @application.SecondpriorityWeek</p>
                        <p><strong>Second Priority Period:</strong> @application.SecondpriorityPeriod</p>
                        </td>
                    </div>
            <button @onclick="() => ShowEditModal(application)" class="btn btn-primary">Edit</button>

                }
            </ModalDialog>

        <ModalDialog @ref="EditDialog" Title="Edit Application">
                        @if (selectedApplication != null)
                        {
                <EditForm Model="@selectedApplication" OnValidSubmit="HandleEditApplication">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                   
              <div class="form-group row">
            <label for="FirstPriorityWeek" class="col-md-4 col-form-label">Føreste prioritet uge</label>
            <div class="col-md-4">
                <InputSelect id="FirstPriorityWeek" @bind-Value="application.FirstpriorityWeek" class="form-control" @oninput="OnInputUge1">
                    @foreach (var anOption in optionsUge1)
                    {
                        <option value="@anOption">@anOption</option>
                    }
                </InputSelect>
                </div>
                </div>
                      
              <div class="form-group row">
            <label for="FirstPriorityPeriod" class="col-md-4 col-form-label">Føreste periode</label>
            <div class="col-md-4">
                    <InputSelect id="FirstPriorityPeriod" @bind-Value="application.FirstpriorityPeriod" class="form-control" @oninput="OnInputPeriode1">
                                    @foreach (var anOption in optionsPeriode1)
                                    {
                            <option value="@anOption"> @anOption</option>
                                    }
                    </InputSelect>

                        </div>
                    </div>

                    <InputText @bind-Value="selectedApplication.Child.Volunteer.Name" />
                    <InputText @bind-Value="selectedApplication.Child.Volunteer.Email" />
                    <InputText @bind-Value="selectedApplication.FirstpriorityWeek" />
                    <!-- Add more input fields as necessary -->

                    <button type="submit" class="btn btn-success">Save Changes</button>
                </EditForm>
                        }
        </ModalDialog>
            }
    </tbody>
</table>
}
</div>


@code {
    private Core.Models.Admin admin = new Core.Models.Admin();
    private Core.Models.Application[] applications = new Core.Models.Application[0];

    private Core.Models.Application? selectedApplication;
    private ModalDialog DetailsDialog;
    private ModalDialog EditDialog;
    private bool showApplications = false;
    private bool showApplicationsApproved = false;

    //options for dropdowns
    string[] optionsUge1 = { "Vælg", "Uge 27", "Uge 28", "Uge 30", "Uge 31" };
    string[] optionsPeriode1 = { "Vælg", "Onsdag-Søndag", "Onsdag-Fredag", "Fredag-Søndag" };
    string selectedOptionUge1 = "Vælg";
    string selectedOptionPeriode1 = "Vælg";


    protected override async Task OnInitializedAsync()
    {

    }

    private void Logout()//logging out of the account
    {
        NavigationManager.NavigateTo("/Admin", forceLoad: true);
    }

    private void ShowApplicationDetails(Core.Models.Application application)//showing details of the application
    {
        selectedApplication = application;
        DetailsDialog.Open();
    }

    private void ShowEditModal(Core.Models.Application application)
    {
        selectedApplication = application;
        EditDialog.Open();
    }

    void OnInputUge1(ChangeEventArgs e)
    {
        selectedOptionUge1 = e.Value?.ToString() ?? "null";
    }

    void OnInputPeriode1(ChangeEventArgs e)
    {
        selectedOptionPeriode1 = e.Value?.ToString() ?? "null";
    }

    private async Task HandleEditApplication()
    {
        if (selectedApplication != null)
        {
            await applicationService.UpdateApplication(selectedApplication);
            EditDialog.Close();  // Close the modal after submission
        }
    }

    private void MoveApplicationToEdit(Core.Models.Application application)//to move the application when edited and approved
    {
        
    }

    [Inject]
    private IApplicationService applicationService { get; set; }

    private async Task ShowQueuedApplications()//shows the queued applications
    {
        applications = await applicationService.GetAllApplications();
        showApplications = true;
    }

    private async Task ShowApplicationsApproved()//shows the applications that have been edited and approved
    {
        applications = await applicationService.GetAllApplications();
        showApplicationsApproved = true;
    }
}
